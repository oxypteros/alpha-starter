/*
  # ----------------------------------------------------------------------
  # SECURITY HEADERS
  #
  # Read comments before changing.
  # Test your site thoroughly after implementing, especially if you embed
  # third-party content or use CDNs.
	#
	# Uncomment and edit to fit your case
  # ----------------------------------------------------------------------

  	# Enforce HTTPS for 1 year, include subdomains.
  	# IMPORTANT: Only enable 'preload' if you understand the implications
  	# and are committed to HTTPS for this domain and all subdomains long-term.
  	# Before preloading, ensure all subdomains are also HTTPS.
  	# To submit for preloading: https://hstspreload.org/:
	#Strict-Transport-Security: max-age=31536000; includeSubDomains; preload

  	# Prevents clickjacking:
	#X-Frame-Options: SAMEORIGIN

  	# Prevents MIME-sniffing attacks
  #X-Content-Type-Options: nosniff

  	# Controls information sent in the Referer header:
	#Referrer-Policy: strict-origin-when-cross-origin

  	# Controls browser features. Disable what you don't need.
		# Example: Permissions-Policy: geolocation=(), microphone=(), camera=()
		# This disables geolocation, microphone, and camera access across the site (including iframes).
  #Permissions-Policy: geolocation=(), microphone=(), camera=(), usb=(), serial=(), hid=(), payment=(), fullscreen=(self), interest-cohort=()

  	# Cross-Origin-Opener-Policy (COOP)
  #Cross-Origin-Opener-Policy: same-origin-allow-popups

  	# ----------------------------------------------------------------------
  	# CROSS-ORIGIN EMBEDDING (COEP, CORP) - POTENTIALLY BREAKING
  	# ----------------------------------------------------------------------
		# No default provided due to the potential for breaking site functionality.
		# Use only if you fully understand the implications.
		# Example: Cross-Origin-Embedder-Policy: require-corp	
		# ----------------------------------------------------------------------


  	# ----------------------------------------------------------------------
  	# CORS - For allowing other sites to access your resources
  	# ----------------------------------------------------------------------
  	# Allows any site to fetch resources (like fonts, images) from your site.

  #Access-Control-Allow-Origin: *

		# ----------------------------------------------------------------------
		# CONTENT SECURITY POLICY (CSP) - Advanced
		# ----------------------------------------------------------------------
		# CSP is very powerful but also complex and highly site-specific.
		# A generic CSP is hard to provide. Users should generate one for their
		# specific site needs if they want this extra layer of security.
		# Start with a more permissive policy or use a CSP generator.
		# Example (restrictive, likely needs adjustment):
		# Content-Security-Policy: default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; object-src 'none';
		# ----------------------------------------------------------------------