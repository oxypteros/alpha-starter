# Netlify Build Settings boilerplate for Alpha Hugo theme
# Documentation: https://docs.netlify.com/configure-builds/file-based-configuration/

# ----------------------------------------------------------------------
#
# Read comments before changing.
# Test your site thoroughly after implementing.
#
# Uncomment and edit to fit your case
# ----------------------------------------------------------------------
[build]
    # Directory to change to before starting a build.
  #base = ""

    # Default build command.
    # If using Pagefind for search (requires Node.js):
  #command = 'hugo --gc --minify && npx pagefind --site "public"'

    # If not using Pagefind:
  #command = "hugo --gc --minify"

    # Directory that contains the built site (relative to base)
  #publish = "public"

    # Optional: Functions directory
  #functions = "netlify/functions"

    # Optional: Edge Functions directory
  #edge_functions = "netlify/edge-functions"

# Environment variables specific to the build context.
# These override values set in the Netlify UI.
[build.environment]
  #HUGO_VERSION = "0.147.3" # Replace with your desired Hugo version (e.g., Alpha's minimum > 0.146.1 or your local)
  #HUGO_ENV = "production"
  #HUGO_ENABLEGITINFO = "true"
  #NODE_VERSION = "22.15.1"  # Replace with desired LTS Node.js version if using Pagefind for search or Tailwind)

# Production context specific settings
[context.production]
  [context.production.environment]
      # You can override environment variables for production here if needed
    #HUGO_ENV = "production" # Already set above, but showing for example

# Deploy Preview context specific settings (for pull requests)
# [context.deploy-preview]
#   command = "hugo --gc --minify -b $DEPLOY_PRIME_URL" # Example: build with deploy preview URL
#  [context.deploy-preview.environment]
#    HUGO_ENV = "development" # Or keep as production if you want previews to mimic production

# Branch Deploy context specific settings (for specific branches)
# [context.staging] # Example for a 'staging' branch
#   command = "hugo --gc --minify -b $URL --environment staging"
#   [context.staging.environment]
#     HUGO_ENV = "staging"

# Custom Headers
# Documentation: https://docs.netlify.com/routing/headers/
# !!! Use with caution and test thoroughly !!!
[[headers]]
  # Apply to all paths (/*)
  for = "/*"
  [headers.values]
      # Content Security Policy (CSP) - Advanced
      # CSP is very powerful but also complex and highly site-specific.
      # A generic CSP is hard to provide. Users should generate one for their
      # specific site needs if they want this extra layer of security.
      # Start with a more permissive policy or use a CSP generator.
      # Example (restrictive, likely needs adjustment):
    #Content-Security-Policy = "default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; object-src 'none';"

      # Basic Security Headers (uncomment and adjust as needed)

      # Prevents clickjacking:
    #X-Frame-Options = "SAMEORIGIN"

      # Prevents MIME-sniffing attacks
    #X-Content-Type-Options = "nosniff"

      # Controls information sent in the Referer header:
    #Referrer-Policy = "strict-origin-when-cross-origin"

      # Controls browser features. Disable what you don't need.
		  # Example: Permissions-Policy: geolocation=(), microphone=(), camera=()
		  # This disables geolocation, microphone, and camera access across the site (including iframes)
    #Permissions-Policy = "geolocation=(), microphone=(), camera=(), fullscreen=(self)"

      # Enforce HTTPS for 1 year, include subdomains.
  	  # IMPORTANT: Only enable 'preload' if you understand the implications
  	  # and are committed to HTTPS for this domain and all subdomains long-term.
  	  # Before preloading, ensure all subdomains are also HTTPS.
  	  # To submit for preloading: https://hstspreload.org/:
    #Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"

    # Example: Cache control for assets (immutable)
    #[[headers]]
    #  for = "/assets/*" # Adjust path as needed
    #  [headers.values]
    #    Cache-Control = "public, max-age=31536000, immutable"

    # Example: Cache control for HTML (stale-while-revalidate)
    #[[headers]]
    #  for = "/*.html"
    #  [headers.values]
    #    Cache-Control = "public, max-age=0, must-revalidate, stale-while-revalidate=86400"


  # Redirects and Rewrites
  # Documentation: https://docs.netlify.com/routing/redirects/
#[[redirects]]
#  from = "/old-path"
#  to = "/new-path"
#  status = 301 # Permanent redirect
#  force = false # Set to true to shadow existing files

#[[redirects]]
#  from = "/api/*"
#  to = "https://api.example.com/:splat" # Example proxy redirect
#  status = 200 # Proxy

# Optional: Netlify Dev settings (for local development with Netlify CLI)
# [dev]
#  command = "hugo server -D -F" # Command to start your dev server
#  port = 8888 # Port that the Netlify dev server will listen on
#  publish = "public" # If your dev server outputs to a different directory
#  targetPort = 1313 # Port your Hugo dev server runs on
#  autoLaunch = true # Opens the browser automatically